-- Quartus II generated Memory Initialization File (.mif)

WIDTH=16;
DEPTH=2048;

ADDRESS_RADIX=HEX;
DATA_RADIX=HEX;

CONTENT BEGIN
    000  :   5DFF;   -- MOVI R5 FFh
    001  :   DD01;   -- OUT R5 00H +1
    002  :   5D01;   -- MOVI R5, 01h (Initial value to start LED from the left)
    003  :   DD00;   -- OUT R5, 00h (Output the value of R5 to LEDs)
    004  :   7006;   -- JMP 006h (Jump to the start of left-to-right sequence)

    -- Left to Right sequence
    006  :   DD00;   -- OUT R5, 00h (Output to LEDs)
    007  :   2D01;   -- SHL R5, 01h (Shift left)
    008  :   5C0F;   -- CMP R5, 0Fh (Compare with final LED value, e.g., all LEDs on)
    009  :   6006;   -- JNE 006h (Jump to 006h if not equal, continue shifting left)
    00A  :   700B;   -- JMP 00Bh (Jump to right-to-left start)

    -- Right to Left sequence
    00B  :   5D0F;   -- MOVI R5, 0Fh (Initialize R5 to start right-to-left)
    00C  :   DD00;   -- OUT R5, 00h (Output to LEDs)
    00D  :   700F;   -- JMP 00Fh (Jump to right-to-left loop)

    00F  :   DD00;   -- OUT R5, 00h (Output to LEDs)
    010  :   2D02;   -- SHR R5, 01h (Shift right)
    011  :   5C01;   -- CMP R5, 01h (Compare with initial value, e.g., first LED)
    012  :   600F;   -- JNE 00Fh (Jump to 00Fh if not equal, continue shifting right)
    013  :   7006;   -- JMP 006h (Jump back to left-to-right start)

    [014..020]  :   0000;
    021  :   5C20;
    022  :   5D00;
    023  :   5E00;
    024  :   7601;
    025  :   F200;
    026  :   E024;
    027  :   7501;
    028  :   F200;
    029  :   E023;
    02A  :   7401;
    02B  :   F200;
    02C  :   E022;
    02D  :   F600;
    [02E..02F]  :   0000;
    030  :   F600;
    [031..7FF]  :   0000;
END;